{"version":3,"sources":["/node_modules/component-emitter/index.js"],"names":[],"mappings":"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","file":"/node_modules/component-emitter/index.js","sourcesContent":["\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n"]}