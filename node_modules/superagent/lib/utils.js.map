{"version":3,"sources":["/node_modules/superagent/lib/utils.js"],"names":[],"mappings":";;;;;;;;;;;;;AASA,OAAO,CAAC,IAAI,GAAG,UAAS,GAAG,EAAC;AAC1B,SAAO,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;CACnC,CAAC;;;;;;;;;;AAUF,OAAO,CAAC,MAAM,GAAG,UAAS,GAAG,EAAC;AAC5B,SAAO,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,UAAS,GAAG,EAAE,GAAG,EAAC;AACjD,QAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC/B,QAAI,GAAG,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;AACxB,QAAI,GAAG,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;;AAExB,QAAI,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;AAC/B,WAAO,GAAG,CAAC;GACZ,EAAE,EAAE,CAAC,CAAC;CACR,CAAC;;;;;;;;;;AAUF,OAAO,CAAC,UAAU,GAAG,UAAS,GAAG,EAAC;AAChC,SAAO,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,UAAS,GAAG,EAAE,GAAG,EAAC;AACjD,QAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC/B,QAAI,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAChC,QAAI,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAClD,OAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;AACf,WAAO,GAAG,CAAC;GACZ,EAAE,EAAE,CAAC,CAAC;CACR,CAAC;;;;;;;;;;AAUF,OAAO,CAAC,WAAW,GAAG,UAAS,MAAM,EAAE,iBAAiB,EAAC;AACvD,SAAO,MAAM,CAAC,cAAc,CAAC,CAAC;AAC9B,SAAO,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAChC,SAAO,MAAM,CAAC,mBAAmB,CAAC,CAAC;AACnC,SAAO,MAAM,CAAC,MAAM,CAAC,CAAC;AACtB,MAAI,iBAAiB,EAAE;AACrB,WAAO,MAAM,CAAC,QAAQ,CAAC,CAAC;GACzB;AACD,SAAO,MAAM,CAAC;CACf,CAAC","file":"/node_modules/superagent/lib/utils.js","sourcesContent":["\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = function(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.params = function(str){\n  return str.split(/ *; */).reduce(function(obj, str){\n    var parts = str.split(/ *= */);\n    var key = parts.shift();\n    var val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.parseLinks = function(str){\n  return str.split(/ *, */).reduce(function(obj, str){\n    var parts = str.split(/ *; */);\n    var url = parts[0].slice(1, -1);\n    var rel = parts[1].split(/ *= */)[1].slice(1, -1);\n    obj[rel] = url;\n    return obj;\n  }, {});\n};\n\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\nexports.cleanHeader = function(header, shouldStripCookie){\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header['host'];\n  if (shouldStripCookie) {\n    delete header['cookie'];\n  }\n  return header;\n};\n"]}